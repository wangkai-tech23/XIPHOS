# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: CI

on:
  workflow_dispatch: {}

  push: 
    branches: 
      - master

  pull_request:
    branches: 
      - master
      - $default-branch

jobs:
  build-and-install:
    
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9, '3.10']

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: check git log
      run: |
        git --no-pager log -2
        

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Install package
      run: |
        python -m pip install --upgrade pip
        python -m pip install -e .
        

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  run-tests:

    needs: build-and-install

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9, '3.10']

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Test with builtin unittests on CPUs
      #if this project, continues to stick with the python builtin unittest package, I suggest to consider pip-installing this oldie
      #https://github.com/phohenecker/torch-test-case
      run: |
        git --no-pager log -2
        python -m pip install --upgrade pip
        python -m pip install torch==1.12.1+cpu -f https://download.pytorch.org/whl/torch_stable.html
        python -m pip install -e .
        python -m unittest tests/test_*py

    # - name: Test with pytest
    #   run: |
    #     pytest
